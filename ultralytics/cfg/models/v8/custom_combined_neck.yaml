nc: 3
ch: [3]

backbone:
  - [-1, 1, DWSConv, [32, 3, 2]]         # 0: Stem
  - [-1, 1, DWSConv, [48, 3, 2]]         # 1: Stage 1
  - [-1, 1, DWSConv, [64, 3, 2]]         # 2: Stage 2
  - [-1, 1, SE, [64]]                    # 3
  - [-2, 1, DWSConv, [128, 3, 2]]        # 4: Stage 3
  - [-1, 1, SE, [128]]                   # 5: C3
  - [-1, 1, CondConv, [256, 3, 2]]       # 6: Stage 4
  - [-1, 1, SE, [256]]                   # 7: C4
  - [-1, 1, DeformableConv, [512, 3, 2]] # 8: Stage 5
  - [-1, 1, CBAM, [512]]                 # 9
  - [-1, 1, DeformableConv, [512, 3, 1]] # 10: Stage 6
  - [-1, 1, CBAM, [512]]                 # 11: C5

head:
  - [11, 1, Conv, [512, 1, 1]]                 # 12: reduce channels (C5)
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 13: upsample to match C4
  - [[-1, 7], 1, Concat, [1]]                  # 14: C5 + C4
  - [-1, 3, C2f, [512]]                        # 15: P4

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 16: upsample to match C3
  - [[-1, 5], 1, Concat, [1]]                  # 17: P4 + C3
  - [-1, 3, C2f, [256]]                        # 18: P3

  - [-1, 1, Conv, [256, 3, 2]]                # 19: downsample P3
  - [[-1, 15], 1, Concat, [1]]                # 20: P3 + P4
  - [-1, 3, C2f, [512]]                        # 21: P4 (again)

  - [-1, 1, Conv, [512, 3, 2]]                # 22: downsample P4
  - [[-1, 12], 1, Concat, [1]]                # 23: P4 + P5
  - [-1, 3, C2f, [1024]]                       # 24: P5 (again)

  - [[18, 21, 24], 1, Detect, [nc]]           # 25: Detect heads on P3, P4, P5
